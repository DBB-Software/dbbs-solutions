/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SubscriptionsImport } from './routes/subscriptions'
import { Route as PurchasesImport } from './routes/purchases'
import { Route as ProfileImport } from './routes/profile'
import { Route as OrganizationImport } from './routes/organization'
import { Route as AuthenticatedImport } from './routes/authenticated'
import { Route as AuthImport } from './routes/auth'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SubscriptionsRoute = SubscriptionsImport.update({
  path: '/subscriptions',
  getParentRoute: () => rootRoute,
} as any)

const PurchasesRoute = PurchasesImport.update({
  path: '/purchases',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const OrganizationRoute = OrganizationImport.update({
  path: '/organization',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  path: '/authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/authenticated': {
      id: '/authenticated'
      path: '/authenticated'
      fullPath: '/authenticated'
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/organization': {
      id: '/organization'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof OrganizationImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/purchases': {
      id: '/purchases'
      path: '/purchases'
      fullPath: '/purchases'
      preLoaderRoute: typeof PurchasesImport
      parentRoute: typeof rootRoute
    }
    '/subscriptions': {
      id: '/subscriptions'
      path: '/subscriptions'
      fullPath: '/subscriptions'
      preLoaderRoute: typeof SubscriptionsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute,
  AuthenticatedRoute,
  OrganizationRoute,
  ProfileRoute,
  PurchasesRoute,
  SubscriptionsRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/authenticated",
        "/organization",
        "/profile",
        "/purchases",
        "/subscriptions"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/authenticated": {
      "filePath": "authenticated.tsx"
    },
    "/organization": {
      "filePath": "organization.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/purchases": {
      "filePath": "purchases.tsx"
    },
    "/subscriptions": {
      "filePath": "subscriptions.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
